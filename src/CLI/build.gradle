plugins {
    id 'java'
    id 'org.web3j' version '4.5.0'
    id 'application'
}
group 'org.web3j'
version '0.2.0'
sourceCompatibility = 1.8
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'java'

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/web3j/main/java")
    }
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

repositories {
    mavenCentral()
}

ext{
    web3jVersion = '4.5.0'
    logbackVersion = '1.2.3'
    junitVersion = '4.12'
    javaMainClass = 'com.swapshub.ethaler.client.EThalerApplication'
}

dependencies {
    implementation "org.web3j:core:$web3jVersion",
            "org.web3j:contracts:$web3jVersion",
            "ch.qos.logback:logback-core:$logbackVersion",
            "ch.qos.logback:logback-classic:$logbackVersion"
    compile "org.web3j:core:$web3jVersion",
            "org.web3j:contracts:$web3jVersion",
            "ch.qos.logback:logback-core:$logbackVersion",
            "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation "junit:junit:$junitVersion"
}

mainClassName = 'com.swapshub.ethaler.client.EThalerApplication'
application {
    mainClassName = 'com.swapshub.ethaler.client.EThalerApplication'
     }

jar {
    baseName = 'eThalerClient'
    version = '1.0'
    manifest {
        attributes 'Main-Class': 'com.swapshub.ethaler.client.EThalerApplication'
    }
}

web3j {
    generatedPackageName = 'org.web3j.sample.contracts.generated'
    excludedContracts = ['Mortal']
}

task copyJars(type: Copy) {
    from(configurations.compile)
    from('build/libs')
    into ('build/lib')
}

task copyResourceFiles(type: Copy) {
    from('/src/main/resources')
    into 'build/runeThalerClient'
}

task createeThalerClientScript(type: CreateStartScripts) {
    mainClassName = 'com.swapshub.ethaler.client.EThalerApplication'
    applicationName = 'eThalerClient'
    outputDir = new File(project.buildDir,'runeThalerClient')
    classpath = jar.outputs.files + project.configurations.compile
}
